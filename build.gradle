buildscript {
	repositories {
		maven {
			name = 'Fabric'
			url = 'https://maven.fabricmc.net/'
		}
		mavenCentral()
		maven { 
			name = 'Jitpack'
			url 'https://jitpack.io/'
		}
	}
	dependencies {
		classpath 'com.github.Chocohead:Fabric-Loom:66ed9fe'
	}
}

apply plugin: 'fabric-loom'

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = 'NotSoNew'
version = '3.2'

repositories {
	maven { 
		name = 'Jitpack'
		url 'https://jitpack.io/'
	}
}

dependencies {
	def mcVersion = '21w18a'
	def mapping = "$mcVersion+build.10"

	minecraft "com.mojang:minecraft:$mcVersion"
	mappings "net.fabricmc:yarn:$mapping:v2"

	modImplementation 'net.fabricmc:fabric-loader:0.11.3'
	//modImplementation 'net.fabricmc.fabric-api:fabric-api:0.34.3+1.17'
	include modApi('com.github.Chocohead:Fabric-ASM:v2.3')
}

sourceSets {
	main {
		java {
			srcDir 'src'
		}
		resources {
			srcDir 'resources'
		}
	}
}

processResources {
	inputs.property 'version', project.version

	from(sourceSets.main.resources.srcDirs) {
		include 'fabric.mod.json'
		expand 'version': project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'fabric.mod.json'
	}
}

minecraft {
	fieldInferenceFilter = {existingName, replacement -> false}
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}